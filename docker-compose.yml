version: '3'
services:
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - "80:80"
      - "9090:${BACKEND_PORT}"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    networks:
      - automation_hub_network

  frontend:
    build: ./frontend
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - backend
    networks:
      - automation_hub_network

  backend:
    build: ./backend
    restart: always
    env_file:
      - .env
    depends_on:
      - db
      - redis
    environment:
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=${JWT_EXPIRATION}
      - JWT_REFRESH_EXPIRATION=${JWT_REFRESH_EXPIRATION}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - IMAGE_UPLOAD_PATH=${IMAGE_UPLOAD_PATH}
      - IMAGE_SIZE_LIMIT=${IMAGE_SIZE_LIMIT}
      - BACKEND_PORT=${BACKEND_PORT}
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    networks:
      - automation_hub_network

  db:
    image: postgres:alpine
    restart: always
    env_file:
      - .env
    hostname: ${DB_HOST}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGPORT: ${DB_PORT}
      DB_HOST: ${DB_HOST}
    volumes:
      - ./db_data:/var/lib/postgresql/data
      #- ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "${DB_PORT}:${DB_PORT}"
    networks:
      - automation_hub_network

  redis:
    image: redis:alpine
    command: --port ${REDIS_PORT}
    env_file:
      - .env
    hostname: ${REDIS_HOST}
    restart: always
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
      - redis_data:/data
    networks:
      - automation_hub_network
    sysctls:
      - net.core.somaxconn=511
volumes:
  db_data:
  redis_data:

networks:
  automation_hub_network:
    driver: bridge
